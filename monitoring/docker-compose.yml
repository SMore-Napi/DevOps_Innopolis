version: '3'

x-logging: &logging
  driver: json-file
  options:
    tag: "{{.ImageName}}|{{.Name}}"
    max-size: "100m"
    max-file: "10"

x-healthcheck: &healthcheck
  interval: 24s
  timeout: 12s
  retries: 4
  start_period: 10s

services:

  app_python:
    image: smorenapi/app_python:latest
    ports:
      - "8000:8000"
    networks:
      - app_python
      - monitoring
    logging: *logging

  app_kotlin:
    image: smorenapi/app_kotlin:latest
    ports:
      - "8080:8080"
    networks:
      - app_kotlin
      - monitoring
    logging: *logging

  loki:
    image: grafana/loki:2.6.1
    mem_limit: 200m
    expose:
      - 3100
    ports:
      - "3100:3100"
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring
    logging: *logging
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --spider http://localhost:3100/ready || exit 1" ]
      <<: *healthcheck

  promtail:
    image: grafana/promtail:2.6.1
    mem_limit: 200m
    expose:
      - 9080
    ports:
      - "9080:9080"
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - promtail-data:/var/lib/promtail/positions
      - ${PWD}/config/promtail.yml:/etc/promtail/promtail.yml
    command: -config.file=/etc/promtail/promtail.yml
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"
    networks:
      - app_python
      - app_kotlin
      - monitoring
    logging: *logging
    healthcheck:
      test: [ "CMD-SHELL", "timeout 5 bash -c 'cat < /dev/null > /dev/tcp/localhost/9080' || exit 1" ]
      <<: *healthcheck

  grafana:
    image: grafana/grafana:latest
    mem_limit: 200m
    volumes:
      - ${PWD}/config/datasources/loki.yml:/etc/grafana/provisioning/datasources/loki_ds.yml
      - ${PWD}/config/datasources/prometheus.yml:/etc/grafana/provisioning/datasources/prometheus_ds.yml
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
    expose:
      - 3000
    ports:
      - "3000:3000"
    networks:
      - monitoring
    logging: *logging
    healthcheck:
       test: ["CMD-SHELL", "wget --no-verbose --spider http://localhost:3000/api/health || exit 1"]
       <<: *healthcheck

  prometheus:
   image: prom/prometheus:v2.39.1
   mem_limit: 200m
   ports:
     - "9090:9090"
   volumes:
     - prometheus-data:/prometheus
     - ${PWD}/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
   command:
     - '--log.level=debug'
     - '--config.file=/etc/prometheus/prometheus.yml'
     - '--storage.tsdb.path=/prometheus'
     - '--web.console.libraries=/usr/share/prometheus/console_libraries'
     - '--web.console.templates=/usr/share/prometheus/consoles'
   restart: always
   networks:
     - app_python
     - app_kotlin
     - monitoring
   healthcheck:
     test: ["CMD-SHELL", "wget --no-verbose --spider http://localhost:9090/-/healthy || exit 1"]
     <<: *healthcheck

networks:
  app_python: { }
  app_kotlin: { }
  monitoring: { }

volumes:
  grafana-data: { }
  grafana-config: { }
  loki-data: { }
  promtail-data: { }
  prometheus-data: { }
